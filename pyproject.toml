[build-system]
requires = ["poetry-core==1.8.2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "FastAPI Backend Template"
version = "0.0.1"
description = "Basic template for Python FastAPI backends."
authors = ["Maximilian Gartz <gartz.maximilian@gmail.com>"]
license = ""
readme = "README.md"
packages = [{ include = "app" }]
repository = "https://github.com/max-gartz/fastapi-backend-template"
keywords = []
classifiers = []

[tool.poetry.dependencies]
python = ">=3.10.0,<3.11"
pip = "23.3.2"
toml = "^0.10.2"
pyaml = "^23.12.0"
fastapi = "^0.110.0"
uvicorn = "^0.27.1"
gunicorn = "^21.2.0"
pydantic-settings = "^2.2.1"
sqlalchemy = "^2.0.29"
psycopg = {extras = ["binary"], version = "^3.1.18"}
sqlmodel = "^0.0.16"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
bcrypt = "4.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.9"
pydantic = {extras = ["email"], version = "^2.6.4"}
alembic = "^1.13.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
bandit = {extras = ["toml"], version = "^1.7.7"}
mypy = "^1.8.0"
pre-commit = "^3.6.2"
ruff = "^0.4.0"
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
httpx = "^0.27.0"


[tool.ruff]
src = ["."]
exclude = ["venv"]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F"]
ignore = []
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
follow_imports = "skip"
disallow_untyped_defs = true
disable_error_code = ["override", "attr-defined", "import", "empty-body"]
exclude = ["venv/", "test_.\\.py$"]

[tool.bandit]
exclude_dirs = [
    "./venv/",
    "./*cache*/",
    "./resources/",
    "./notebooks/"
]
skips = ["B608"]

[tool.bandit.assert_used]
skips = ["**/test_*.py", "**/*_test.py"]

# Pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--strict-markers --disable-pytest-warnings"
markers = []

# Pytest coverage
[tool.coverage.paths]
source = ["app", "*/site-packages"]

[tool.coverage.run]
source = ["app"]
omit = ["**/__init__.py", "**/test_*.py"]